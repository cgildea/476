\def\chapternumber{Multicast -- 26 October 2011}
\input slides.tex
\centerline{\bbf Internet Multicasting}

Somewhere between unicast and broadcast.
\break
Goes to a group of machines.
\break
Machines can register/de-register for the group.

Sender: this is the source of the multicast; it sort of looks like
a client in the other models in that it initiates messages.

The send can be done from any socket; binding to a port number
is not necessary.

Often the sender only sends, never receives. 
\vf
Receiver: this is the receiver of the multicast; it sort of looks like
a server in other models.

The receiver must bind to a particular port.

Often the receiver never sends messages.
\vf
Ports apply to multicast messages.

A multicast to port 5001 will not be heard by a receiver bound
to port 5002.

\newslide
Ethernet Hardware support:
\break
1/2 the hardware addresses are multicast,
\break
(low-bit of high-byte {\ltt{}==} 1).
\break
A card recognizes, MAC address, broadcast address.
\break
It can be programmed to recognize
\break
one or more multicast addresses.

\vt
Internet support:
\break
Internet addresses {\ltt{}224.0.0.0}--{\ltt{}239.255.255.255}
\break
are reserved for multicast groups.
\break
These address all start with the 4 bits 1110.
\break
The low 28 bits are the multicast group number.

Some multicast addresses are reserved,
\break
a few of these are:

{\ltt{}224.0.0.2} --- all routers on this subnet.
\break
{\ltt{}224.0.0.5} --- OSPF routers.
\break
{\ltt{}224.0.0.9} --- RIP2 routers.
\break
{\ltt{}224.0.0.84} --- Jini Annoucement.
\newslide
\centerline{\bbf Multicast Groups}

A host can join/leave a multicast group.

A host can be a member of an arbitrary number of groups.

Multicast is one-to-many so:
\break
ICMP is not allowed with multicast groups: eg.
\break
packets time-out, but this only means for some hosts.
\vt

\centerline{\bbf Multicast and Routers}

Packets that are multicast are ``seen" by routers.
\break
If the router has multicast enabled,
\break
it forwards the packet
\break
Implication: hosts do not need routing for multicast
If the router has multicast enabled,

\vt
Range: if the hosts limits the time-to-live, the
range of the multicast packet is limited.

Semantic: hosts join groups on specific networks (cables)
\break
Effect: if you have multiple ethernet cards and
\break
the multicast comes in on an unexpected cable
\break
you won't see it.
\break
Use {\ltt{}INADDR_ANY} to join on all cables.
\newslide
\centerline{\bbf Sending a Multicast (simple)}

1) Get a socket, must be UDP since it isn't one to one.

2) Set up a internet address structure {\ltt{}in_addr}
with the multicast address.

3) {\ltt{}sendto} the multicast address

{\cprogram
int s;
struct sockaddr_in multiAddr;
char* msg = "Hi There";
s = socket(AF_INET, SOCK_DGRAM, 0));
multiAddr.sin_family = AF_INET;
multiAddr.sin_port = htons(5432);
multiAddr.sin_addr.s_addr = inet_addr("224.0.1.1");
sendto(s,msg,strlen(msg),0,
  (struct sockaddr *)&multiAddr,
  sizeof(multiAddr));
@endprogram}

We send from whatever arbitrary port number that was setup when
the socket was created.

\newslide
\centerline{\bbf Receiving a Multicast}

1) Set up your socket.
Bind to the well-known port.
\break
2) Join a multicast group.
\break
3) Do a standard {\ltt{}recvfrom}.

{\cprogram
int s;
struct sockaddr_in bindAddr, him;
struct ip_mreq mreq;
int alen = sizeof(struct sockaddr_in);
int Zero = 0;
char msg[20];
s = socket(AF_INET, SOCK_DGRAM, 0);
bindAddr.sin_family = AF_INET;
bindAddr.sin_port = htons(5432);
bindAddr.sin_addr.s_addr = INADDR_ANY;
bind(s,(struct sockaddr *)&bindAddr,
  sizeof(bindAddr));
mreq.imr_multiaddr.s_addr = inet_addr("224.0.1.1");
mreq.imr_interface.s_addr = INADDR_ANY;
setsockopt(s,IPPROTO_IP,IP_ADD_MEMBERSHIP,
  &mreq,sizeof(mreq));
recvfrom(s, msg, sizeof(msg), 0,
  (struct sockaddr *)&him, &alen);
@endprogram}
\bye
