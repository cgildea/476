\input macros
\input cstuff
\headline{{\bf CECS 472\hfill Homework 18 \hfill Fall 2013}}
\footline{Nathan Pickrell \hfill 5 November 2013 (Week 11 Lecture 1)\hfill 
Due: 14 November 2013 (Week 12 Lecture 2)}
\parindent 0pt

Purpose: This assignment is designed to familiarize you
with external data representation.
This is intended as a fairly simple drill, just to get
you a little experience with XDR.

{\it THE SENDER}

You will modify the XDR example from lecture so that the XDR stream
includes a string in addition to the two integers and the a float.
The string sent should always be {\ltt{}"Hi There"}.

Further modify the example from lecture so that it
(a) uses the {\ltt{}get_port()} command
and
(b) uses uses the Comer switch ({\ltt{}argc}) with
default to localhost to set the parameter passed to {\ltt{}connectUDP}.
(Minor cut and paste.)

{\it THE RECEIVER}

Modify the example receiver so that it, in addition to the
two integers and float, it receives and extracts
the string.
In addition to the other prints;
print the string.

Further modify the example from lecture so that it
uses the {\ltt{}get_port} command.
Don't bother to add Comer's switch.

{\bf Files:}
The examples from the lecture are available in
two files called {\ltt{}send.c} and {\ltt{}receive.c}
found in the directory:
\hfill\break
{\ltt{}~volper/classes/472/programs/xdr_example}

{\bf Submit:}
A print out of the both sender and receiver.
In addition,
the source code for your program must be placed in your home directory
in files named {\ltt{}send.c} and {\ltt{}receive.c}.

{\bf Discussion:}

You need to be careful here, the XDR routine for strings
takes a third parameter, indicating the maximum size
of the string.
When sending the string, make sure this is larger than
the size of the string.
When receiving the string, this should be the size
of your string buffer.
On your recevier side you will need to add another array
into which you can extract the string.

\bye
