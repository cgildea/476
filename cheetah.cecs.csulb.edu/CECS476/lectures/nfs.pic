\def\chapternumber{NFS -- 12 January 2012}
\input slides.tex
\centerline{\bbf Network File System}

Concept: machines can share files.

File Server: must grant permission for access

Client: must import file system

Unix: permission and import is by subtree
\break
a directory and its descendants

Unix attaches directories into a tree using {\ltt{}mount}

A {\ltt{}mount} of a subtree from a server will be used
to attach the server's subtree into our file system tree
\vt
Linux: Networking components

{\ltt{}rpc.portmap}: NFS is based on remote procedure calls

{\ltt{}rpc.mountd}: The server runs this program,
it handles mount requests from clients

{\ltt{}rpc.nfsd}: The server runs this program, 
it handles requests for files from client machines

\newslide
\centerline{\bbf Exports}

file: {\ltt{}/etc/exports}

Purpose: 
say what is exported and to whom

Each line:
\bread
A directory and a list of machines permitted to mount the subtree
under that directory

{\program
/harddisk lab17.net.cecs.csulb.edu(rw,sync)
/usr/info lab19.net.cecs.csulb.edu(ro) lab20(rw)
/usr/bin *.net.cecs.csulb.edu(ro)
/oops    134.139.136.64/255.255.255.192(rw)
\endprogram}


lab17 is allowed read/write access to
{\ltt{}/harddisk} 
\break
lab19 is allowed read only access to
{\ltt{}/usr/info} 
and
lab20 is allowed read/write 
\break
{\ltt{}/usr/bin} is exported with a wild card
\break
User sam on will have ``sam" priviledges on {\ltt{}/harddisk}

{\ltt{}sync}: write immediate to keep files in sync
\break
{\ltt{}root_squash}: root on the client machine doesn't get root priviledges 
\break
{\ltt{}no_subtree_check}: ensure file requests are in the exported subtree

{\ltt{}exportfs}: A command similar to mount; it causes the exports
file to be reread. Pay attention command to the options!
\newslide
\centerline{\bbf Remote Programs}

At boot the remote programs are started by the {\ltt{}rc.nfsd} script.

The script may be enabled by {\ltt{}chmod a+x rc.nfsd}
\break
May be run by hand, but requires the parameter {\ltt{}start}.

The script will start the remote programs only if the {\ltt{}exports} file
exists and contains some exports.

The {\ltt{}rc.nfsd} script can also be run by hand with either a
start and stop.

\vf
You may also start {\ltt{}rpc.mountd} and {\ltt{}rpc.nfsd} by hand.
\break
Start only one copy.

May also start from {\ltt{}inetd}.

\newslide
\centerline{\bbf Mounting Remote Files}

Normal mount command systax is used
\break
The fstab can be used

{\ltt{}/etc/fstab}
\break
{\ltt{}lynx.net.cecs.csulb.edu:/u1 /lynx nfs bg,soft 0 0}

server machine-name:/directory
\break
Where to attach it locally

{\ltt{}nfs}: the type of file system
\break
other options include {\ltt{}ext2} or {\ltt{}msdos}

{\ltt{}bg}: if the mount times out, background it and keep trying
{\ltt{}soft}: report an error if an NFS operation times out
\break
{\ltt{}intr}: allow a control C to abort an operation if it has timed out
\break
{\ltt{}nolock}: file locking is local to this machine and does not attempt
to lock against other NFS clients.

Caution: booting or a program will hang if you give options which require
an NFS operation to succeed and the NFS server is down. (i.e. we recommend
bg, soft, intr).

Review:
\break
The machine owning the disk must {\bit export}.
\break
The machine wanting to use the files must {\bit mount}.
\newslide
\centerline{\bbf Network File System}
\centerline{automatic mounts}

Situation: you have alot of NFS mounts,
\break
many are infrequently used.

Regular NFS mount: Error if server goes offline.

Solution: keep unused NFS mounts in the unmounted state.
\break
automatically mount when needed.

A {\ltt{}cd}, {\ltt{}ls} or other program that needs something
in an NFS area triggers a NFS mount.

If a NFS mount hasn't been used in a while,
\break
(timeout period), unmount it.

Sun: {\ltt{}automount}
\break
Linux: {\ltt{}automount}
\break
BSD: {\ltt{}amd}
\newslide
\centerline{\bbf Linux automount}

1) Attach an automount daemon to a directory.

2) Specify which subdirectories to automount

Invoking automount (sample):

{\ltt{}/usr/sbin/automount /home/mount file /etc/autostuff}

Automounts are done for subdirectories of {\ltt{}/home/mount}
\break
The file {\ltt{}/etc/autostuff} tells us what to do.

Sample {\ltt{}autostuff}:

{\program
u1 -soft,intr d1.cecs.csulb.edu:/u1
u2 -soft,intr d1.cecs.csulb.edu:/u2
mail -soft,intr charlotte.cecs.csulb.edu:/var/mail
\endprogram}

1) if the user wants {\ltt{}/home/mount/u1},
\break
automount {\ltt{}/u1} from {\ltt{}d1}.

2) if the user wants {\ltt{}/home/mount/u2},
\break

3) if the user wants {\ltt{}/home/mount/mail},
\break
automount {\ltt{}/var/mail} from {\ltt{}charlotte}.

\newslide
\centerline{\bbf automount (alternative config)}

Automount has a master map that can be used to specify other files.

The name of this file is specified by the
{\ltt{}MASTER_MAP_NAME} variable in {\ltt{}/etc/defaults/autofs}

Default master map entry (must be last)
\break
{\ltt{}/net -hosts}
\break
Meaning:
\break
If {\ltt{}/net/d1/u2} is requested assume:
\break
{\ltt{}d1} is the hostname
\break
{\ltt{}u2} is the directory name on that host
\break
mount that directory under {\ltt{}/net/d1/u2}


Typical master map override entry:
\break
{\ltt{}/net/aardvark /etc/auto.aardvark}
\break
Meaning:
\break
If the directory {\ltt{}/net/aardvark} is requestd,
see the file {\ltt{}/etc/auto.aardvark for directions.
\break
File format same as given on previous slide.

\bye
