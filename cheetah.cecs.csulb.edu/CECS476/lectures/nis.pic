\def\chapternumber{NIS -- 7 January 2008}
\input slides.tex
\centerline{\bbf NIS (or YP)}

Network Information System
\break
(used to be called Yellow Pages)

Distribute information to a local group of machines
\break
One master server with files, changes the files there, push the changes
to slave servers.
\break
Slave servers: often one or two per subnet. Get information from master server.
\break
Clients: Call any server and ask.

Easier than changing the same file in several dozen machines
\break
The data from a file is stored in a database format (dbm) and is map.

Information usually includes the following important files:
\break
password, group, hosts, mail aliases, netgroups
\break
and also the following (rarely used files):
\break
networks, services, rpc, protocols

Machines are organized into groups called domains.
\break
Machines in a domain must be trusting and are usually centrally administered.
\newslide
\centerline{\bbf YP Domains and Clients}

The group of machines is given a name, this is
called the nis domain name (that is different from your IP domain name)
\break
{\ltt{}/etc/defaultdomain}: contains this name

The command {\ltt{}nisdomainname} is used to examine or set the domain name.

At boot time the command:
\break
{\ltt{}nisdomainname `cat /etc/defaultdomain`}
\break
sets the domain name from the file.

A yp client finds a server in its domain and asks questions.
\newslide
\centerline{\bbf Setting up a YP client (NIS)}

1) edit (create) {\ltt{}/etc/defaultdomain}, 

2) {\ltt{}chmod a+x /etc/rc.d/rc.yp}
\break
uncomment the lines about {\ltt{}ypbind}
\break
uncomment other if using additional yp services

3) make sure {\ltt{}/var/yp} is a directory

4) If your yp server is not on the same cable,
edit {\ltt{}/etc/yp.conf} to have the server's name or number. 
If it has the name you must either have the name in {\ltt{}/etc/hosts}
or have DNS running (you have got to find out the number). 

5) Set up the 
{\ltt{}/etc/nsswitch.conf}
and other files to use nis.

6) Either reboot or start by hand

Starting by hand (especially for testing):
\break
Use the following commands: (from {\ltt{}rc.yp})

{\ltt{}nisdomainname} your NIS domain name
\break
{\ltt{}/usr/sbin/ypbind}

\newslide
\centerline{\bbf NIS file formats}

{\ltt{}/etc/nsswitch.conf} defines the lookup order
\break
It is re-read everytime a lookup is done.

Example:

{\program
passwd: files nis
hosts: dns nis files
aliases: nis dbm
\endprogram}

For each item list what is used (in order).
\breaj
Entries for the files, for nis, for dns (hosts only)
nisplus and local data bases.

{\ltt{}+} format compatibility:

{\program
passwd: compat
group: compat
\endprogram}

In each of the files you may place a {\ltt{}+} where
you want the NIS information included.

You can also use the netgroup format.

{\ltt{}/etc/yp.conf} -- format allows several lines of
\break
{\ltt{}server host_name domain_name}
\break
Allows you to specify a ypserver.
\break
Support for multiple domains.

\newslide
\centerline{\bbf Setting up a YP Master Server}

1) Edit {\ltt{}defaultdomain}, and make sure {\ltt{}/var/yp} is a directory

2) chmod {\ltt{}rc.yp} and uncommenting the yp server lines,
\break
(protect with {\ltt{}if -e}) for {\ltt{}/var/yp/}{\bit{}domainname}

3) Make sure you have real files for password, groups, netgroup,
services, protocols.
\break
Do not have the + entries (you have the real files, so using yp is circular).

3a) setup the domain name (by hand)
\break
3b) as root run {\ltt{}ypinit -m}  
\break
(on Linux it is in {\ltt{}/usr/lib/yp})

The databases are built and stored in the {\ltt{}/var/yp/}{\bit{}domainname}
directory.

4) Start {\ltt{}ypserv}

\vfill
\centerline{\bbf Setting up a YP Slave Server}

Follow the steps above except use
\break
{\ltt{}ypinit -s } {\bit ip.name.of.master.server}
\break
Name the master server for your domain.
\newslide
\centerline{\bbf NIS utilities}

NIS used database (dbm) format.
\break
A database is called a map
\break
(e.g., password map).


{\ltt{}ypwhich}: what server am I talking to

{\ltt{}ypset}: use this server

{\ltt{}ypcat}: print what yp has in the named map

{\ltt{}ypmatch}: find a specified pattern in a named map

{\ltt{}yppush}: master server sends copies of the named map to the slave servers

{\ltt{}ypxfr}: slave server gets the named map from the master server

{\ltt{}ypmake}: rebuilds the named map from the corresponding file
\newslide
\centerline{\bbf Netgroup}

{\ltt{}/etc/netgroup} --- form: {\ltt{}name} tuple list
\break
(on one line, use back-slash as line continuation)

{\program
print4 (lab84,-,cecsnet) (lab86,-,cecsnet)
file1 (lynx,-,cecsnet) (panther,-,cecsnet)
combined print4 file1 (cougar,-,cecsnet)
\endprogram}

Some programs/files allow netgroups:

{\ltt{}print4} allows/denys something with 2 machines 

Format is (machine name, user name, yp domain name)

The - indicates all users.

Typical tactic: use netgroups on all printers, control access from your
yp server by changing the tuple lists.

Usage varies by application:
\break
{\ltt{}@print4} \qquad {\ltt{}print4} \qquad {\ltt{}+@print4}

\bye
