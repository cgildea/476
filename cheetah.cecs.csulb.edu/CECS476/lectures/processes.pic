\def\chapternumber{Processes -- 29 November 2010}
\input slides.tex
\centerline{\bbf Processes}

Unix timeslices: each runnable process gets an allocation of time units.

The allocation does not depend on it being in the active window,

Processes have priority, but each gets some time
(except very nice processes).

Your niceness (priority) controls how much CPU you get,
but, if no else is running you will. 
\break
Example: all other processes are waiting for disk or user input.

\newslide
\centerline{\bbf System Load}

{\ltt{}uptime} -- reports the short, medium and long term number
of runable processes. If this is under 1.0 you've got spare CPU.
Warning: multiple CPU machines may or may not divide by the number
of processors.

{\ltt{}free} -- summary statistics about memory

{\ltt{}vmstat} -- summary statistics about processes, swap space, 
memory usage, CPU usage and io.
Shows what you are running short on.
With no parameters it lists statistics since the last reboot.
To get more meaningful information you can use the parameters to
specify how many times to run and at what interval; the first report
will still be a summary, but the later ones will be snapshot.

{\ltt{}top} -- summarizes statistics and lists most consumptive processes 

{\ltt{}ps} -- look at the running processes.
Various options show different subsets of the processes with
different amounts of information.
For a complete listing use:
\break
{\ltt{}ps auxww}
\newslide
\centerline{\bbf More about the ps command}

{\ltt{}%CPU}
\break
The percentage of the CPU a process is using.
\break
This is the current CPU percentage, your ps will be very high
since it is running now.
\break
{\bit Watch for:} A process taking a large percentage of time.

{\ltt{}TIME}
\break
This is the total amount of CPU that the process has consumed.
\break
Certain processes such as system will accumulate a lot of CPU since
they never stop.
\break
{\bit Watch for:} A process which had consumed alot of CPU.

{\ltt{}STAT}
\break
The status of 
\break
{\bit Watch for:} A lot of defunct ({\ltt{}Z}) processes, indicating
that some server is incorrectly handling forks and waits.
\break
A lot of IO wait processes ({\ltt{}D}), often indicates that some
network file system isn't online or a hard drive had gone bad.

{\ltt{}PID}
\break
You need this number to terminate the process
\newslide

Watch for abnormalities
\break
Example 1: a {\ltt{}COMMAND} of {\ltt{}telnet} with a {\ltt{}TTY}
of {\ltt{}?}. Telnets and edits should be associated with terminals
\break
Example 2: a compile ({\ltt{}gcc}) with a {\ltt{}TTY} of {\ltt{}?}. 
This will happen on build servers, but probably not on other machines.

\newslide
\centerline{\bbf Sample Administration}

Administration Task -- remove run-away user jobs (without rebooting).

{\sprogram
sseiden  13638 90.0  0.4 3164  120 ?  R    Sep  6 10935:50 netscape
volper    1464  7.7  1.8  260  508 p5 R    11:58      0:00 ps aux
root       119  0.0  0.0   28    0 ?  S <  Sep  4    38:50  (nfsd)
root         2  0.0  0.0    0    0 ?  D    Sep  4     0:46 pagedaemon
\endprogram}

The netscape looks suspicious.
It should be interactive.
It's using 90\% of the CPU.
It's used 10000 minutes of CPU.

Action -- 1) call user, 2) {\ltt{}kill 13638},  3) {\ltt{}kill -9 13638}
\break
4) {\ltt{}kill -15 13638}

Caution: killing the wrong process could a) upset an innocent user 
b) lobotomize the operating system

For a multiprocess jam you can kill all processes of a given name:
{\sprogram
joe  1431  1.0  0.5  260   54 ?  R   10:39     0:50 hwk1
joe  1432  1.1  0.4  260   54 ?  R   10:39     0:48 hwk1
joe  1433  1.0  0.4  261   54 ?  R   10:39     0:50 hwk1
joe  1434  1.2  0.4  261   54 ?  R   10:39     0:46 hwk1
\endprogram}

{\ltt{}killall hwk1}
\bye
