\def\chapternumber{Building a Kernel -- 16 February 2012}
\input slides.tex
\centerline{\bbf Building a new Kernel}

Philosophy: kernel contains device drivers, 
network code, program loader, file system code.
\break
Load everything, kernel is large but most code
is unused

Task: build the kernel you need.
\break
Example: match an embedded system

Philosophy: Kernel bugs will be fixed.

Rebuild to 
(1) patch a bug, 
(2) install new capabilities,
(3) streamline for efficiency 

Rebuilding the kernel:
\break
Linux: recompile the source code.

Warning: if the kernel doesn't include the hardware,
\break
it will not boot.

Principle: maintain a backup boot floppy or partition
\break
You have to something that boots to restore the old kernel.

Modules: most capabilities are available in loadable modules.
The kernel must be able to boot (correct disk or network drivers);
other capabilities can be outside the core of the kernel.

\newslide
\centerline{\bbf Sources}

Freely available.

Usually in {\ltt{}/usr/src/linux}
\break
mostly this is a link 
\break
(e.g. to {\ltt{}/usr/src/linux.2.6.34})
\break
switching the link, switches your kernel version.

Two additional links are necessary, our release has them,
but if you are using another release
check to make sure these are there before you rebuild.

{\ltt{}ln -s /usr/src/linux/include/linux /usr/include/linux}
\break
(the second is a link to the first).
\break
The correct include files for your version of the kernel must
be in the compilers include path.

{\ltt{}ln -s /usr/src/linux/include/asm /usr/include/asm}
\break
The correct assembler for your machine kernel must
be in the compilers include path.

linux has versions for the following CPUs
x86 (PC), 68000 (Amiga), 604 (PowerPC/Mac), 
Sparc (Sun) , MIPS (SGI), Alpha (Compaq),
Precision Architecture (HP), AMD64, ARM9

\newslide
\centerline{\bbf Configuring the Kernel}

{\ltt{}cd /usr/src/linux}

Note: down to the {\ltt{}cp} you do not have to be root,
\break
you just have to own {\ltt{}/usr/src/linux}

{\ltt{}make config} -- you will be asked 20 questions about your system.
\break
If you reach one you don't know,
\break
record it and keep going.
\break
You can repeat this command.
\break
This command sets up the {\ltt{}Makefile} to build your version of the
kernel.

{\ltt{}make menuconfig} -- menu driven version
\break
Allows you to make and unmake selections.

When you exit both save your selections as in a file called {\ltt{}.config}
They also build a {\ltt{}Makefile}

It will use an existing {\ltt{}.config} or a default config.
\break
Consequence: default answers reflect the previous config

{\ltt{}make dep} -- make dependencies. Make should recompile files
if they have changed or any .h file they include has changed.
This command builds the lists of depencenies.
Only needs to be done once when you add includes to kernel files.

\newslide
\centerline{\bbf Compiling the Kernel}

{\ltt{}make bzImage} -- (or {\ltt{}Image} or {\ltt{}vmlinuz} or {\ltt{}zImage})
\break
Compile a kernel, a {\ltt{}z} indicates a compressed version.
\break
check your makefile to see what this is called.
\break
Options for make are followed by colons
\break
{\ltt{}vmlinuz:} ... 

This builds your kernel and stores it in
\break
{\ltt{}/usr/src/linux/arch/x86/boot}
\break
For example a bzImage kernel would be found as
\break
{\ltt{}/usr/src/linux/arch/x86/boot/bzImage}

Move the kernel into the boot area calling it
\break
/boot/bzImage}

To test your kernel you need to
modify your boot configuration to support a dual boot and
rebuild the boot record

\newslide
\centerline{\bbf Linux Loader}

A brief review of LILO

Until the kernel is loaded, 
\break
the computer does know about directory structure
\break
so you can't load a file.
\break
LILO must work by knowing the block numbers
of each kernel block to load.
\break
New kernel means different block numbers.

The LILO setup program (also called lilo)
\break
is used with Linux running,
\break
it knows about directories.
\break
It finds the kernel on disk and
builds the master boot record with the correct 
block entries for that kernel.

Consequence: run {\ltt{}lilo} each time you install
(mv or cp) a kernel

Lilo flexibility: you are allowed multiple sections,
you can have multiple kernels...as long as they have
different names.

\newslide
\centerline{\bbf LILO }

{\ltt{}/sbin/lilo} -- the program that installs lilo into
the Master Boot Record (MBR)

{\ltt{}/etc/lilo.conf} -- configuration file.
\break
Tells {\ltt{}/sbin/lilo} what to put into MBR.
\break
in effect tells lilo boot program how to behave; 

{\ltt{}/sbin/liloconfig} -- shell script that
\break
helps you build {\ltt{}lilo.conf}
\break
then invokes {\ltt{}/sbin/lilo} to install the lilo boot program

The boot sequence can be set:
\break
1) boot directly, no options
\break
2) prompt for boot option
\break
3) delay (to allow left shift key to be pressed leisurely), 
then boot default option.

\newslide
\centerline{\bbf Sample {\ltt{}lilo.conf}}

{\program
delay = 50
vga = normal
ramdisk = 0
lba32
# partition config
image = /boot/vmlinuz
  root = /dev/sda2
  label = linux
  read-only
# another partition config
other = /dev/sda3  # dos partition
  label = DOS
\endprogram}

{\ltt{}delay} -- delay in 10ths of second, then default
\break
default is first partition in config
\break
{\ltt{}prompt} --    prompt and wait (not shown)
\break
{\ltt{}ramdisk} -- size of ramdisk (0 = no ramdisk)
\break
{\ltt{}label} -- what to type if we want this option
\break
{\ltt{}loader} -- program used to load OS found in this partition
\break
{\ltt{}root} -- linux root partition
\break
{\ltt{}read-only} -- initial mount is read-only for disk check

{\ltt{}image} usually a file (use the map), but can be a range of sectors.
The kernel is assumed to be loaded in order into those sectors.
(allows tape or floppy boot)
\newslide
Lilo can be invoked directly:

{\ltt{}lilo -r /mnt -m /boot/map -C /etc/lilo.conf}
\break
Non-standard files may be specified when lilo is invoked
\break
defaults: {\ltt{}/boot/map} map of kernel 
{\ltt{}/etc/lilo.conf} configuration file.

lilo takes a large number of parameters (see Map Installer)
\break
most override the configuration file.

Example: naming a boot device

{\ltt{} -b /dev/fd0}  \qquad on command line

{\ltt{}boot=/dev/fd0}  \qquad in lilo.conf

{\ltt{}-r /mnt} \qquad there is a disk mounted on {\ltt{}/mnt}.
switch to that file system and run lilo using the {\ltt{}lilo.conf} 
found on that disk.

\newslide
\centerline{\bbf Boot Parameters}

During the boot sequence

1) if the left shift key is depressed, a prompt is
displayed for which partition to boot,
then a prompt is displayed for boot parameters.

2) if caps lock is on a prompt is
displayed for boot parameters.
These override the config.

3) if there is a time-out, the default operating system
(first partition listed) is booted

Parameters: 

{\ltt{}no387} -- disable FPU

{\ltt{}root=/dev/fd1} -- designate root partition

{\ltt{}single} -- single user mode, for maintenance

{\ltt{}ether=9,0x240,0,0,eth0} -- network card has a
non-standard configuration, this is where you should probe.
\break
In {\ltt{}lilo.conf} the above parameter is entered as
\break
{\ltt{}append="ether=9,0x240,0,0,eth0"}
\newslide
\centerline{\bbf Booting From Floppy}

Method 1: entire system is on floppy

Often: boot floppy, root floppy

Often: root file system is loaded into RAM (ramdisk)
\vt
Method 2: kernel is on floppy, root is on hard drive
\vt
Method 3: lilo is on floppy, kernel is on hard drive

Only useful if you goofed MBR lilo install.
\vf
\centerline{\bbf Examining Boot Messages}

{\ltt{}dmesg}: a linux program that will display the later
boot messages

You have to have the kernel loaded (decompressed) to save anything.
\newslide
\centerline{\bbf Booting Over A Network}

There must be a boot server on the network.

The boot server will run:

{\ltt{}dhcpd} to supply a network identification
\break
({\ltt{}dhcpd} can also specify a kernel

{\ltt{}tftpd} to transfer the boot files to your machine

\vt

Your ROM BIOS must support network booting
\break
(bootp, tftp and dhcp protocols)
\break
or you may use a boot floppy/CD that has a netboot on it.

\vt
If you get into trouble on the kernel and can't boot,
boot from the network (see prompt at bottom of boot screen);
mount your {\ltt{}/dev/sda2} on {\ltt{}/mnt}
\break
adjust your {\ltt{}/mnt/etc/lilo.conf}
\break
run the following series of commands then reboot:

{\program
mount -o bind /proc /mnt/proc
mount -o bind /sys /mnt/sys
chroot /mnt lilo
\endprogram}
\bye
